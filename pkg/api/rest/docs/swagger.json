{
    "swagger": "2.0",
    "info": {
        "description": "Multi-Cloud Terrarium (mc-terrarium) aims to provide an enriched environment for multi-cloud infrastructure.",
        "title": "Multi-Cloud Terrarium  REST API",
        "contact": {
            "name": "API Support",
            "url": "http://cloud-barista.github.io",
            "email": "contact-to-cloud-barista@googlegroups.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "latest"
    },
    "basePath": "/terrarium",
    "paths": {
        "/httpVersion": {
            "get": {
                "description": "Checks and logs the HTTP version of the incoming request to the server console.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[System] Utility"
                ],
                "summary": "Check HTTP version of incoming request",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            }
        },
        "/readyz": {
            "get": {
                "description": "Check mc-terrarium server is ready",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[System] Utility"
                ],
                "summary": "Check mc-terrarium server is ready",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            }
        },
        "/rg/{resourceGroupId}": {
            "delete": {
                "description": "Clear the entire directories and configuration files",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[ResourceGroup] Resource group"
                ],
                "summary": "Clear the entire directories and configuration files",
                "parameters": [
                    {
                        "type": "string",
                        "default": "tofu-rg-01",
                        "description": "Resource group ID",
                        "name": "ResourceGroupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            }
        },
        "/rg/{resourceGroupId}/vpn/gcp-aws": {
            "get": {
                "description": "Get resource info to configure GCP to AWS VPN tunnels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPN] GCP to AWS VPN tunnel configuration"
                ],
                "summary": "Get resource info to configure GCP to AWS VPN tunnels",
                "parameters": [
                    {
                        "type": "string",
                        "default": "tofu-rg-01",
                        "description": "resource group ID",
                        "name": "resourceGroupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "refined",
                        "description": "Resource info by detail (refined, raw)",
                        "name": "detail",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "custom request ID",
                        "name": "x-request-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseObject"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            },
            "post": {
                "description": "Create network resources for VPN tunnel in GCP and AWS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPN] GCP to AWS VPN tunnel configuration"
                ],
                "summary": "Create network resources for VPN tunnel in GCP and AWS",
                "parameters": [
                    {
                        "type": "string",
                        "default": "tofu-rg-01",
                        "description": "Resource group ID",
                        "name": "resourceGroupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID",
                        "name": "x-request-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseTextWithDetails"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            },
            "delete": {
                "description": "Destroy network resources that were used to configure GCP as an AWS VPN tunnel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPN] GCP to AWS VPN tunnel configuration"
                ],
                "summary": "Destroy network resources that were used to configure GCP as an AWS VPN tunnel",
                "parameters": [
                    {
                        "type": "string",
                        "default": "tofu-rg-01",
                        "description": "Resource group ID",
                        "name": "resourceGroupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID",
                        "name": "x-request-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseTextWithDetails"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            }
        },
        "/rg/{resourceGroupId}/vpn/gcp-aws/clear": {
            "delete": {
                "description": "Clear the entire directory and configuration files",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPN] GCP to AWS VPN tunnel configuration"
                ],
                "summary": "Clear the entire directory and configuration files",
                "parameters": [
                    {
                        "type": "string",
                        "default": "tofu-rg-01",
                        "description": "Resource group ID",
                        "name": "resourceGroupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID",
                        "name": "x-request-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            }
        },
        "/rg/{resourceGroupId}/vpn/gcp-aws/infracode": {
            "post": {
                "description": "Create the infracode to configure GCP to AWS VPN tunnels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPN] GCP to AWS VPN tunnel configuration"
                ],
                "summary": "Create the infracode to configure GCP to AWS VPN tunnels",
                "parameters": [
                    {
                        "type": "string",
                        "default": "tofu-rg-01",
                        "description": "Resource group ID",
                        "name": "resourceGroupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Parameters requied to create the infracode to configure GCP to AWS VPN tunnels",
                        "name": "ParamsForInfracode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateBluprintOfGcpAwsVpnRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID",
                        "name": "x-request-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseTextWithDetails"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            }
        },
        "/rg/{resourceGroupId}/vpn/gcp-aws/plan": {
            "post": {
                "description": "Check and show changes by the current infracode to configure GCP to AWS VPN tunnels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPN] GCP to AWS VPN tunnel configuration"
                ],
                "summary": "Check and show changes by the current infracode to configure GCP to AWS VPN tunnels",
                "parameters": [
                    {
                        "type": "string",
                        "default": "tofu-rg-01",
                        "description": "Resource group ID",
                        "name": "resourceGroupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID",
                        "name": "x-request-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseTextWithDetails"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseTextWithDetails"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            }
        },
        "/rg/{resourceGroupId}/vpn/gcp-aws/request/{requestId}/status": {
            "get": {
                "description": "Check the status of a specific request by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPN] GCP to AWS VPN tunnel configuration"
                ],
                "summary": "Check the status of a specific request by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "default": "tofu-rg-01",
                        "description": "Resource group ID",
                        "name": "resourceGroupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "requestId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            }
        },
        "/rg/{resourceGroupId}/vpn/gcp-aws/terrarium": {
            "post": {
                "description": "Initialize a multi-cloud terrarium for GCP to AWS VPN tunnel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPN] GCP to AWS VPN tunnel configuration"
                ],
                "summary": "Initialize a multi-cloud terrarium for GCP to AWS VPN tunnel",
                "parameters": [
                    {
                        "type": "string",
                        "default": "tofu-rg-01",
                        "description": "Resource group ID",
                        "name": "resourceGroupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID",
                        "name": "x-request-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            }
        },
        "/rg/{resourceGroupId}/vpn/gcp-azure": {
            "post": {
                "description": "Create network resources for VPN tunnel in GCP and Azure",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPN] GCP to Azure VPN tunnel configuration"
                ],
                "summary": "Create network resources for VPN tunnel in GCP and Azure",
                "parameters": [
                    {
                        "type": "string",
                        "default": "tofu-rg-01",
                        "description": "Resource group ID",
                        "name": "resourceGroupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID",
                        "name": "x-request-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseTextWithDetails"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            },
            "delete": {
                "description": "Destroy network resources that were used to configure GCP as an Azure VPN tunnel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPN] GCP to Azure VPN tunnel configuration"
                ],
                "summary": "Destroy network resources that were used to configure GCP as an Azure VPN tunnel",
                "parameters": [
                    {
                        "type": "string",
                        "default": "tofu-rg-01",
                        "description": "Resource group ID",
                        "name": "resourceGroupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID",
                        "name": "x-request-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseTextWithDetails"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            }
        },
        "/rg/{resourceGroupId}/vpn/gcp-azure/clear": {
            "delete": {
                "description": "Clear the entire directory and configuration files",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPN] GCP to Azure VPN tunnel configuration"
                ],
                "summary": "Clear the entire directory and configuration files",
                "parameters": [
                    {
                        "type": "string",
                        "default": "tofu-rg-01",
                        "description": "Resource group ID",
                        "name": "resourceGroupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID",
                        "name": "x-request-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            }
        },
        "/rg/{resourceGroupId}/vpn/gcp-azure/infracode": {
            "post": {
                "description": "Create the infracode to configure GCP to Azure VPN tunnels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPN] GCP to Azure VPN tunnel configuration"
                ],
                "summary": "Create the infracode to configure GCP to Azure VPN tunnels",
                "parameters": [
                    {
                        "type": "string",
                        "default": "tofu-rg-01",
                        "description": "Resource group ID",
                        "name": "resourceGroupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Parameters requied to create the infracode to configure GCP to Azure VPN tunnels",
                        "name": "ParamsForInfracode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateInfracodeOfGcpAzureVpnRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID",
                        "name": "x-request-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseTextWithDetails"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            }
        },
        "/rg/{resourceGroupId}/vpn/gcp-azure/plan": {
            "post": {
                "description": "Check and show changes by the current infracode to configure GCP to Azure VPN tunnels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPN] GCP to Azure VPN tunnel configuration"
                ],
                "summary": "Check and show changes by the current infracode to configure GCP to Azure VPN tunnels",
                "parameters": [
                    {
                        "type": "string",
                        "default": "tofu-rg-01",
                        "description": "Resource group ID",
                        "name": "resourceGroupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID",
                        "name": "x-request-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseTextWithDetails"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseTextWithDetails"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            }
        },
        "/rg/{resourceGroupId}/vpn/gcp-azure/request/{requestId}/status": {
            "get": {
                "description": "Check the status of a specific request by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPN] GCP to Azure VPN tunnel configuration"
                ],
                "summary": "Check the status of a specific request by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "default": "tofu-rg-01",
                        "description": "Resource group ID",
                        "name": "resourceGroupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "requestId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            }
        },
        "/rg/{resourceGroupId}/vpn/gcp-azure/resource/info": {
            "get": {
                "description": "Get resource info to configure GCP to Azure VPN tunnels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPN] GCP to Azure VPN tunnel configuration"
                ],
                "summary": "Get resource info to configure GCP to Azure VPN tunnels",
                "parameters": [
                    {
                        "type": "string",
                        "default": "tofu-rg-01",
                        "description": "Resource group ID",
                        "name": "resourceGroupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "refined",
                        "description": "Resource info by detail (refined, raw)",
                        "name": "detail",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID",
                        "name": "x-request-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseObject"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            }
        },
        "/rg/{resourceGroupId}/vpn/gcp-azure/terrarium": {
            "post": {
                "description": "Initialize a multi-cloud terrarium for GCP to Azure VPN tunnel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[VPN] GCP to Azure VPN tunnel configuration"
                ],
                "summary": "Initialize a multi-cloud terrarium for GCP to Azure VPN tunnel",
                "parameters": [
                    {
                        "type": "string",
                        "default": "tofu-rg-01",
                        "description": "Resource group ID",
                        "name": "resourceGroupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Custom request ID",
                        "name": "x-request-id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            }
        },
        "/sample/users": {
            "get": {
                "description": "Get information of all users.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Sample] Users"
                ],
                "summary": "Get a list of users",
                "responses": {
                    "200": {
                        "description": "(sample) This is a sample description for success response in Swagger UI",
                        "schema": {
                            "$ref": "#/definitions/handlers.GetUsersResponse"
                        }
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user with the given information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Sample] Users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User information",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "(Sample) This is a sample description for success response in Swagger UI",
                        "schema": {
                            "$ref": "#/definitions/handlers.GetUserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/sample/users/{id}": {
            "get": {
                "description": "Get information of a user with a specific ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Sample] Users"
                ],
                "summary": "Get specific user information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(Sample) This is a sample description for success response in Swagger UI",
                        "schema": {
                            "$ref": "#/definitions/handlers.GetUserResponse"
                        }
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a user with the given information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Sample] Users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User information to update",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "(Sample) This is a sample description for success response in Swagger UI",
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user with the given information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Sample] Users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deletion successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "patch": {
                "description": "Patch a user with the given information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Sample] Users"
                ],
                "summary": "Patch a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User information to update",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.PatchUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(Sample) This is a sample description for success response in Swagger UI",
                        "schema": {
                            "$ref": "#/definitions/handlers.PatchUserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/test-env": {
            "get": {
                "description": "Get all resource info of test environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Test env] Test environment management"
                ],
                "summary": "Get all resource info of test environment",
                "parameters": [
                    {
                        "type": "string",
                        "default": "refined",
                        "description": "Resource info by detail (refined, raw)",
                        "name": "detail",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            },
            "post": {
                "description": "Create test environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Test env] Test environment management"
                ],
                "summary": "Create test environment",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            },
            "delete": {
                "description": "Destroy test environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Test env] Test environment management"
                ],
                "summary": "Destroy test environment",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            }
        },
        "/test-env/clear": {
            "delete": {
                "description": "Clear the entire directory and configuration files",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Test env] Test environment management"
                ],
                "summary": "Clear the entire directory and configuration files",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            }
        },
        "/test-env/infracode": {
            "post": {
                "description": "Create the infracode to configure test environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Test env] Test environment management"
                ],
                "summary": "Create the infracode to configure test environment",
                "parameters": [
                    {
                        "description": "Parameters requied to create the infracode to configure test environment",
                        "name": "ParamsForInfracode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateInfracodeOfTestEnvRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            }
        },
        "/test-env/init": {
            "post": {
                "description": "Initialize a multi-cloud terrarium for test environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Test env] Test environment management"
                ],
                "summary": "Initialize a multi-cloud terrarium for test environment",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            }
        },
        "/test-env/plan": {
            "post": {
                "description": "Check the infracode and show changes of test environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Test env] Test environment management"
                ],
                "summary": "Check the infracode and show changes of test environment",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            }
        },
        "/test-env/request/{requestId}/status": {
            "get": {
                "description": "Get the status of the request to configure test environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Test env] Test environment management"
                ],
                "summary": "Get the status of the request to configure test environment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Request ID",
                        "name": "requestId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            }
        },
        "/tofuVersion": {
            "get": {
                "description": "Check Tofu version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[System] Utility"
                ],
                "summary": "Check Tofu version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ResponseText"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.CreateBluprintOfGcpAwsVpnRequest": {
            "type": "object",
            "properties": {
                "tfVars": {
                    "$ref": "#/definitions/models.TfVarsGcpAwsVpnTunnel"
                }
            }
        },
        "handlers.CreateInfracodeOfGcpAzureVpnRequest": {
            "type": "object",
            "properties": {
                "tfVars": {
                    "$ref": "#/definitions/models.TfVarsGcpAzureVpnTunnel"
                }
            }
        },
        "handlers.CreateInfracodeOfTestEnvRequest": {
            "type": "object",
            "properties": {
                "tfVars": {
                    "$ref": "#/definitions/models.TfVarsTestEnv"
                }
            }
        },
        "handlers.CreateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.GetUserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.GetUsersResponse": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MyUser"
                    }
                }
            }
        },
        "handlers.PatchUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.PatchUserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateUserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.MyUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.ResponseList": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {}
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.ResponseObject": {
            "type": "object",
            "properties": {
                "object": {
                    "type": "object",
                    "additionalProperties": true
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.ResponseText": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "text": {
                    "type": "string",
                    "example": "Any text"
                }
            }
        },
        "models.ResponseTextWithDetails": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string",
                    "example": "Any details"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "text": {
                    "type": "string",
                    "example": "Any text"
                }
            }
        },
        "models.TfVarsGcpAwsVpnTunnel": {
            "type": "object",
            "properties": {
                "aws-region": {
                    "type": "string",
                    "default": "ap-northeast-2",
                    "example": "ap-northeast-2"
                },
                "aws-subnet-id": {
                    "type": "string",
                    "example": "subnet-xxxxx"
                },
                "aws-vpc-id": {
                    "type": "string",
                    "example": "vpc-xxxxx"
                },
                "gcp-region": {
                    "type": "string",
                    "default": "asia-northeast3",
                    "example": "asia-northeast3"
                },
                "gcp-vpc-network-name": {
                    "type": "string",
                    "default": "tofu-gcp-vpc",
                    "example": "tofu-gcp-vpc"
                },
                "resource-group-id": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "models.TfVarsGcpAzureVpnTunnel": {
            "type": "object",
            "properties": {
                "azure-gateway-subnet-cidr-block": {
                    "type": "string",
                    "default": "192.168.130.0/24",
                    "example": "192.168.130.0/24"
                },
                "azure-region": {
                    "type": "string",
                    "default": "koreacentral",
                    "example": "koreacentral"
                },
                "azure-resource-group-name": {
                    "type": "string",
                    "default": "tofu-rg-01",
                    "example": "tofu-rg-01"
                },
                "azure-virtual-network-name": {
                    "type": "string",
                    "default": "tofu-azure-vnet",
                    "example": "tofu-azure-vnet"
                },
                "gcp-region": {
                    "type": "string",
                    "default": "asia-northeast3",
                    "example": "asia-northeast3"
                },
                "gcp-vpc-network-name": {
                    "type": "string",
                    "default": "tofu-gcp-vpc",
                    "example": "tofu-gcp-vpc"
                },
                "resource-group-id": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "models.TfVarsTestEnv": {
            "type": "object",
            "properties": {
                "aws-region": {
                    "type": "string",
                    "default": "ap-northeast-2",
                    "example": "ap-northeast-2"
                },
                "azure-region": {
                    "type": "string",
                    "default": "koreacentral",
                    "example": "koreacentral"
                },
                "azure-resource-group-name": {
                    "type": "string",
                    "default": "tofu-rg-01",
                    "example": "tofu-rg-01"
                },
                "gcp-region": {
                    "type": "string",
                    "default": "asia-northeast3",
                    "example": "asia-northeast3"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}