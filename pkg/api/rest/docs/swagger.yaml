basePath: /terrarium
definitions:
  handler.CreateUserRequest:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  handler.GetUserResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  handler.GetUsersResponse:
    properties:
      users:
        items:
          $ref: '#/definitions/model.MyUser'
        type: array
    type: object
  handler.PatchUserRequest:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  handler.PatchUserResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  handler.UpdateUserRequest:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  handler.UpdateUserResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  model.CreateInfracodeOfGcpAwsVpnRequest:
    properties:
      tfVars:
        $ref: '#/definitions/model.TfVarsGcpAwsVpnTunnel'
    type: object
  model.CreateInfracodeOfGcpAzureVpnRequest:
    properties:
      tfVars:
        $ref: '#/definitions/model.TfVarsGcpAzureVpnTunnel'
    type: object
  model.CreateInfracodeOfTestEnvRequest:
    properties:
      tfVars:
        $ref: '#/definitions/model.TfVarsTestEnv'
    type: object
  model.MyUser:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  model.Response:
    properties:
      data: {}
      details:
        example: Any details
        type: string
      message:
        example: Any message
        type: string
      status:
        example: 200
        type: integer
      success:
        example: true
        type: boolean
    type: object
  model.TerrariumInfo:
    properties:
      description:
        default: This terrarium enriches ...
        example: This terrarium enriches ...
        type: string
      id:
        default: tr01
        example: tr01
        type: string
    required:
    - id
    type: object
  model.TfVarsGcpAwsVpnTunnel:
    properties:
      aws-region:
        default: ap-northeast-2
        example: ap-northeast-2
        type: string
      aws-subnet-id:
        example: subnet-xxxxx
        type: string
      aws-vpc-id:
        example: vpc-xxxxx
        type: string
      gcp-region:
        default: asia-northeast3
        example: asia-northeast3
        type: string
      gcp-vpc-network-name:
        default: tr-gcp-vpc
        example: tr-gcp-vpc
        type: string
      terrarium-id:
        example: ""
        type: string
    type: object
  model.TfVarsGcpAzureVpnTunnel:
    properties:
      azure-gateway-subnet-cidr-block:
        default: 192.168.130.0/24
        example: 192.168.130.0/24
        type: string
      azure-region:
        default: koreacentral
        example: koreacentral
        type: string
      azure-resource-group-name:
        default: tr-rg-01
        example: tr-rg-01
        type: string
      azure-virtual-network-name:
        default: tr-azure-vnet
        example: tr-azure-vnet
        type: string
      gcp-region:
        default: asia-northeast3
        example: asia-northeast3
        type: string
      gcp-vpc-network-name:
        default: tr-gcp-vpc
        example: tr-gcp-vpc
        type: string
      terrarium-id:
        example: ""
        type: string
    type: object
  model.TfVarsTestEnv:
    properties:
      aws-region:
        default: ap-northeast-2
        example: ap-northeast-2
        type: string
      azure-region:
        default: koreacentral
        example: koreacentral
        type: string
      azure-resource-group-name:
        default: tr-rg-01
        example: tr-rg-01
        type: string
      gcp-region:
        default: asia-northeast3
        example: asia-northeast3
        type: string
    type: object
info:
  contact:
    email: contact-to-cloud-barista@googlegroups.com
    name: API Support
    url: http://cloud-barista.github.io
  description: Multi-Cloud Terrarium (mc-terrarium) aims to provide an environment
    to enrich multi-cloud infrastructure.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Multi-Cloud Terrarium  REST API
  version: latest
paths:
  /httpVersion:
    get:
      consumes:
      - application/json
      description: Checks and logs the HTTP version of the incoming request to the
        server console.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Check HTTP version of incoming request
      tags:
      - '[System] Utility'
  /readyz:
    get:
      consumes:
      - application/json
      description: Check mc-terrarium server is ready
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Check mc-terrarium server is ready
      tags:
      - '[System] Utility'
  /sample/users:
    get:
      consumes:
      - application/json
      description: Get information of all users.
      produces:
      - application/json
      responses:
        "200":
          description: (sample) This is a sample description for success response
            in Swagger UI
          schema:
            $ref: '#/definitions/handler.GetUsersResponse'
        "404":
          description: User Not Found
          schema:
            type: object
      summary: Get a list of users
      tags:
      - '[Sample] Users'
    post:
      consumes:
      - application/json
      description: Create a new user with the given information.
      parameters:
      - description: User information
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/handler.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: (Sample) This is a sample description for success response
            in Swagger UI
          schema:
            $ref: '#/definitions/handler.GetUserResponse'
        "400":
          description: Invalid Request
          schema:
            type: object
      summary: Create a new user
      tags:
      - '[Sample] Users'
  /sample/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user with the given information.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User deletion successful
          schema:
            type: string
        "400":
          description: Invalid Request
          schema:
            type: object
        "404":
          description: User Not Found
          schema:
            type: object
      summary: Delete a user
      tags:
      - '[Sample] Users'
    get:
      consumes:
      - application/json
      description: Get information of a user with a specific ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: (Sample) This is a sample description for success response
            in Swagger UI
          schema:
            $ref: '#/definitions/handler.GetUserResponse'
        "404":
          description: User Not Found
          schema:
            type: object
      summary: Get specific user information
      tags:
      - '[Sample] Users'
    patch:
      consumes:
      - application/json
      description: Patch a user with the given information.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User information to update
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/handler.PatchUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: (Sample) This is a sample description for success response
            in Swagger UI
          schema:
            $ref: '#/definitions/handler.PatchUserResponse'
        "400":
          description: Invalid Request
          schema:
            type: object
        "404":
          description: User Not Found
          schema:
            type: object
      summary: Patch a user
      tags:
      - '[Sample] Users'
    put:
      consumes:
      - application/json
      description: Update a user with the given information.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User information to update
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: (Sample) This is a sample description for success response
            in Swagger UI
          schema:
            $ref: '#/definitions/handler.UpdateUserResponse'
        "400":
          description: Invalid Request
          schema:
            type: object
      summary: Update a user
      tags:
      - '[Sample] Users'
  /test-env:
    delete:
      consumes:
      - application/json
      description: Destroy test environment
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Destroy test environment
      tags:
      - '[Test env] Test environment management'
    get:
      consumes:
      - application/json
      description: Get all resource info of test environment
      parameters:
      - default: refined
        description: Resource info by detail (refined, raw)
        in: query
        name: detail
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get all resource info of test environment
      tags:
      - '[Test env] Test environment management'
    post:
      consumes:
      - application/json
      description: Create test environment
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create test environment
      tags:
      - '[Test env] Test environment management'
  /test-env/clear:
    delete:
      consumes:
      - application/json
      description: Clear the entire directory and configuration files
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Clear the entire directory and configuration files
      tags:
      - '[Test env] Test environment management'
  /test-env/infracode:
    post:
      consumes:
      - application/json
      description: Create the infracode to configure test environment
      parameters:
      - description: Parameters requied to create the infracode to configure test
          environment
        in: body
        name: ParamsForInfracode
        required: true
        schema:
          $ref: '#/definitions/model.CreateInfracodeOfTestEnvRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create the infracode to configure test environment
      tags:
      - '[Test env] Test environment management'
  /test-env/init:
    post:
      consumes:
      - application/json
      description: Initialize a multi-cloud terrarium for test environment
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Initialize a multi-cloud terrarium for test environment
      tags:
      - '[Test env] Test environment management'
  /test-env/plan:
    post:
      consumes:
      - application/json
      description: Check the infracode and show changes of test environment
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Check the infracode and show changes of test environment
      tags:
      - '[Test env] Test environment management'
  /test-env/request/{requestId}/status:
    get:
      consumes:
      - application/json
      description: Get the status of the request to configure test environment
      parameters:
      - description: Request ID
        in: path
        name: requestId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get the status of the request to configure test environment
      tags:
      - '[Test env] Test environment management'
  /tofuVersion:
    get:
      consumes:
      - application/json
      description: Check Tofu version
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Check Tofu version
      tags:
      - '[System] Utility'
  /tr:
    get:
      consumes:
      - application/json
      description: Read all terrarium
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.TerrariumInfo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Read all terrarium
      tags:
      - '[Terrarium] An environment to enrich the multi-cloud infrastructure'
    post:
      consumes:
      - application/json
      description: Issue/create a terrarium
      parameters:
      - description: Information for a new terrarium
        in: body
        name: TerrariumInfo
        required: true
        schema:
          $ref: '#/definitions/model.TerrariumInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Issue/create a terrarium
      tags:
      - '[Terrarium] An environment to enrich the multi-cloud infrastructure'
  /tr/{trId}:
    delete:
      consumes:
      - application/json
      description: Erase the entire terrarium including directories and configuration
        files
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Erase the entire terrarium including directories and configuration
        files
      tags:
      - '[Terrarium] An environment to enrich the multi-cloud infrastructure'
    get:
      consumes:
      - application/json
      description: Read a terrarium
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TerrariumInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Read a terrarium
      tags:
      - '[Terrarium] An environment to enrich the multi-cloud infrastructure'
  /tr/{trId}/vpn/gcp-aws:
    delete:
      consumes:
      - application/json
      description: Destroy network resources that were used to configure GCP as an
        AWS VPN tunnel
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Destroy network resources that were used to configure GCP as an AWS
        VPN tunnel
      tags:
      - '[VPN] GCP to AWS VPN tunnel configuration'
    get:
      consumes:
      - application/json
      description: Get resource info to configure GCP to AWS VPN tunnels
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - default: refined
        description: Resource info by detail (refined, raw)
        in: query
        name: detail
        type: string
      - description: custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get resource info to configure GCP to AWS VPN tunnels
      tags:
      - '[VPN] GCP to AWS VPN tunnel configuration'
    post:
      consumes:
      - application/json
      description: Create network resources for VPN tunnel in GCP and AWS
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create network resources for VPN tunnel in GCP and AWS
      tags:
      - '[VPN] GCP to AWS VPN tunnel configuration'
  /tr/{trId}/vpn/gcp-aws/clear:
    delete:
      consumes:
      - application/json
      description: Clear the entire directory and configuration files
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Clear the entire directory and configuration files
      tags:
      - '[VPN] GCP to AWS VPN tunnel configuration'
  /tr/{trId}/vpn/gcp-aws/env:
    post:
      consumes:
      - application/json
      description: Initialize a multi-cloud terrarium for GCP to AWS VPN tunnel
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Initialize a multi-cloud terrarium for GCP to AWS VPN tunnel
      tags:
      - '[VPN] GCP to AWS VPN tunnel configuration'
  /tr/{trId}/vpn/gcp-aws/infracode:
    post:
      consumes:
      - application/json
      description: Create the infracode to configure GCP to AWS VPN tunnels
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Parameters requied to create the infracode to configure GCP to
          AWS VPN tunnels
        in: body
        name: ParamsForInfracode
        required: true
        schema:
          $ref: '#/definitions/model.CreateInfracodeOfGcpAwsVpnRequest'
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create the infracode to configure GCP to AWS VPN tunnels
      tags:
      - '[VPN] GCP to AWS VPN tunnel configuration'
  /tr/{trId}/vpn/gcp-aws/plan:
    post:
      consumes:
      - application/json
      description: Check and show changes by the current infracode to configure GCP
        to AWS VPN tunnels
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Check and show changes by the current infracode to configure GCP to
        AWS VPN tunnels
      tags:
      - '[VPN] GCP to AWS VPN tunnel configuration'
  /tr/{trId}/vpn/gcp-aws/request/{requestId}:
    get:
      consumes:
      - application/json
      description: Check the status of a specific request by its ID
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Request ID
        in: path
        name: requestId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Check the status of a specific request by its ID
      tags:
      - '[VPN] GCP to AWS VPN tunnel configuration'
  /tr/{trId}/vpn/gcp-azure:
    delete:
      consumes:
      - application/json
      description: Destroy network resources that were used to configure GCP as an
        Azure VPN tunnel
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Destroy network resources that were used to configure GCP as an Azure
        VPN tunnel
      tags:
      - '[VPN] GCP to Azure VPN tunnel configuration'
    post:
      consumes:
      - application/json
      description: Create network resources for VPN tunnel in GCP and Azure
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create network resources for VPN tunnel in GCP and Azure
      tags:
      - '[VPN] GCP to Azure VPN tunnel configuration'
  /tr/{trId}/vpn/gcp-azure/clear:
    delete:
      consumes:
      - application/json
      description: Clear the entire directory and configuration files
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Clear the entire directory and configuration files
      tags:
      - '[VPN] GCP to Azure VPN tunnel configuration'
  /tr/{trId}/vpn/gcp-azure/env:
    post:
      consumes:
      - application/json
      description: Initialize a multi-cloud terrarium for GCP to Azure VPN tunnel
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Initialize a multi-cloud terrarium for GCP to Azure VPN tunnel
      tags:
      - '[VPN] GCP to Azure VPN tunnel configuration'
  /tr/{trId}/vpn/gcp-azure/infracode:
    post:
      consumes:
      - application/json
      description: Create the infracode to configure GCP to Azure VPN tunnels
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Parameters requied to create the infracode to configure GCP to
          Azure VPN tunnels
        in: body
        name: ParamsForInfracode
        required: true
        schema:
          $ref: '#/definitions/model.CreateInfracodeOfGcpAzureVpnRequest'
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create the infracode to configure GCP to Azure VPN tunnels
      tags:
      - '[VPN] GCP to Azure VPN tunnel configuration'
  /tr/{trId}/vpn/gcp-azure/plan:
    post:
      consumes:
      - application/json
      description: Check and show changes by the current infracode to configure GCP
        to Azure VPN tunnels
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Check and show changes by the current infracode to configure GCP to
        Azure VPN tunnels
      tags:
      - '[VPN] GCP to Azure VPN tunnel configuration'
  /tr/{trId}/vpn/gcp-azure/request/{requestId}:
    get:
      consumes:
      - application/json
      description: Check the status of a specific request by its ID
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Request ID
        in: path
        name: requestId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Check the status of a specific request by its ID
      tags:
      - '[VPN] GCP to Azure VPN tunnel configuration'
  /tr/{trId}/vpn/gcp-azure/resource/info:
    get:
      consumes:
      - application/json
      description: Get resource info to configure GCP to Azure VPN tunnels
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - default: refined
        description: Resource info by detail (refined, raw)
        in: query
        name: detail
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get resource info to configure GCP to Azure VPN tunnels
      tags:
      - '[VPN] GCP to Azure VPN tunnel configuration'
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
